- hosts: all
  tasks:
    - name: init array
      set_fact:
        ips: []
        ports: []
    - name: resolve ips
      set_fact: ips="{{ ips + [ lookup('dig', item + '.') ] }}"
      loop: "{{ ansible_play_hosts_all }}"
    - name: add http ports
      set_fact: ports="{{ ports + [ '80', '443' ] }}"
      when: "'web' in group_names"
    - name: add mail ports
      set_fact: ports="{{ ports + [ '25', '465', '587', '143', '993' ] }}"
      when: "'mail' in group_names"
    - name: required packages
      pacman:
        name:
          - iptables
          - sshguard
        state: latest
    - name: dump iptables rules
      shell: "iptables-save > /etc/iptables/iptables.temp"
    - name: extract docker nat
      shell: "echo '*nat' > /etc/iptables/docker.nat.rules"
      when: "'docker' in group_names"
    - name: extract docker nat
      shell: "awk '/*nat/{flag=1;next}/COMMIT/{flag=0}flag' /etc/iptables/iptables.temp >> /etc/iptables/docker.nat.rules"
      when: "'docker' in group_names"
    - name: extract docker nat
      shell: "echo 'COMMIT' >> /etc/iptables/docker.nat.rules"
      when: "'docker' in group_names"
    - name: extract docker forwarding
      shell: "echo '-A FORWARD -j DOCKER-USER' > /etc/iptables/docker.fw.rules"
      when: "'docker' in group_names"
    - name: extract docker forwarding
      shell: "awk '/-A FORWARD -j DOCKER-USER/{flag=1;next}/-A DOCKER-USER -j RETURN/{flag=0}flag' /etc/iptables/iptables.temp >> /etc/iptables/docker.fw.rules"
      when: "'docker' in group_names"
    - name: extract docker forwarding
      shell: "echo '-A DOCKER-USER -j RETURN' >> /etc/iptables/docker.fw.rules"
      when: "'docker' in group_names"
    - name: extract sshguard blacklists
      shell: "awk '/-A open -j ACCEPT/{flag=1;next}/COMMIT/{flag=0}flag' /etc/iptables/iptables.temp > /etc/iptables/sshguard.rules"
    - name: cat ssh rules
      shell: "cat /etc/iptables/sshguard.rules || true"
      register: sshguard_filter
    - name: init extras
      set_fact:
        docker_nat: ''
        docker_fw: ''
        sshguard_blacklist: "{{ sshguard_filter.stdout }}"
    - name: cat if docker
      shell: "cat /etc/iptables/docker.nat.rules || true"
      register: cmd_nat
    - name: cat if docker again
      shell: "cat /etc/iptables/docker.fw.rules || true"
      register: cmd_fw
    - name: set fact if docker
      set_fact:
        docker_nat: "{{ cmd_nat.stdout }}"
        docker_fw: "{{ cmd_fw.stdout }}"
      when: "'docker' in group_names"
    - name: chattr -i /etc/iptables/iptables.rules
      file:
        path: /etc/iptables/iptables.rules
        attributes: -i
    - name: create iptables.rules
      template:
        src: iptables.j2
        dest: /etc/iptables/iptables.rules
    - name: chattr +i /etc/iptables/iptables.rules
      file:
        path: /etc/iptables/iptables.rules
        attributes: +i
    - name: enable/restart iptables
      systemd:
        state: restarted
        enabled: yes
        name: iptables
    - name: enable/restart sshguard
      systemd:
        state: restarted
        enabled: yes
        name: sshguard
    - name: cleanup
      file: "{{ item }}"
        state: absent
      loop:
        - /etc/iptables/iptables.temp
        - /etc/iptables/docker.nat.rules
        - /etc/iptables/docker.fw.rules
        - /etc/iptables/sshguard.rules
